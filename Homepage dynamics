To design an electricity-themed home page that resonates with real-time scenarios and educates users about electricity's impact on daily life, we can create a dynamic and interactive interface. The page can include:

1. Electricity Facts Section: Displays real-time electricity usage statistics, tips on conserving energy, and facts about renewable energy.


2. Real-Time Scenarios: Information about smart meters, electricity consumption patterns, and energy-saving methods.


3. Dynamic Components: Interactive graphs or cards showing electricity usage and costs over time.


4. Premium Design: Use of animations, gradients, and visually appealing icons.



Below is a code implementation in Angular 19:


---

Frontend Code

Home Component

home.component.ts

import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-home',
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.css'],
})
export class HomeComponent implements OnInit {
  facts = [
    "Did you know? Turning off lights can save 15% on your electricity bill.",
    "Renewable energy accounts for 26% of global electricity production.",
    "Smart meters can reduce your electricity costs by tracking real-time usage.",
  ];

  usageData = [
    { day: 'Monday', usage: 20 },
    { day: 'Tuesday', usage: 18 },
    { day: 'Wednesday', usage: 25 },
    { day: 'Thursday', usage: 22 },
    { day: 'Friday', usage: 30 },
  ];

  ngOnInit() {
    // Simulate data fetching
    console.log('HomeComponent initialized');
  }
}


---

HTML Template

home.component.html

<div class="home-container">
  <header class="header">
    <h1 class="title">Welcome to Electricity Truth Sense</h1>
    <p class="subtitle">Empowering you with knowledge and energy-saving tips.</p>
  </header>

  <!-- Electricity Facts -->
  <section class="facts-section">
    <h2 class="section-title">Did You Know?</h2>
    <ul class="facts-list">
      <li *ngFor="let fact of facts" class="fact-item">
        {{ fact }}
      </li>
    </ul>
  </section>

  <!-- Real-Time Usage -->
  <section class="usage-section">
    <h2 class="section-title">Your Weekly Electricity Usage</h2>
    <div class="usage-graph">
      <div *ngFor="let data of usageData" class="usage-bar" [style.height]="data.usage * 5 + 'px'">
        <span class="usage-label">{{ data.day }}</span>
        <span class="usage-value">{{ data.usage }} kWh</span>
      </div>
    </div>
  </section>

  <!-- Call to Action -->
  <section class="cta-section">
    <h2>Take Action Today</h2>
    <p>Monitor your usage, optimize consumption, and save money.</p>
    <button mat-raised-button color="primary">Explore Tips</button>
  </section>
</div>


---

CSS Styling

home.component.css

body {
  margin: 0;
  font-family: 'Roboto', sans-serif;
  background: linear-gradient(to right, #00c6ff, #0072ff);
  color: white;
}

.header {
  text-align: center;
  padding: 2rem;
  background: rgba(0, 0, 0, 0.5);
}

.title {
  font-size: 3rem;
  margin: 0;
}

.subtitle {
  font-size: 1.5rem;
  opacity: 0.8;
}

.facts-section, .usage-section, .cta-section {
  text-align: center;
  margin: 2rem 1rem;
}

.section-title {
  font-size: 2rem;
  margin-bottom: 1rem;
}

.facts-list {
  list-style-type: none;
  padding: 0;
}

.fact-item {
  background: rgba(255, 255, 255, 0.2);
  padding: 1rem;
  margin: 0.5rem 0;
  border-radius: 10px;
}

.usage-graph {
  display: flex;
  justify-content: space-around;
  align-items: flex-end;
  height: 200px;
  margin-top: 1rem;
}

.usage-bar {
  width: 50px;
  background: white;
  text-align: center;
  border-radius: 5px;
  position: relative;
}

.usage-label {
  position: absolute;
  bottom: -20px;
  font-size: 0.8rem;
}

.usage-value {
  position: absolute;
  top: -20px;
  font-size: 0.8rem;
}

.cta-section {
  margin: 2rem 1rem;
}

button {
  font-size: 1.2rem;
  padding: 0.8rem 2rem;
  border-radius: 20px;
}


---

Backend Code

Controller for Fetching Facts and Usage Data

ElectricityController.java

@RestController
@RequestMapping("/api/electricity")
public class ElectricityController {

    @GetMapping("/facts")
    public ResponseEntity<List<String>> getElectricityFacts() {
        List<String> facts = Arrays.asList(
            "Did you know? Turning off lights can save 15% on your electricity bill.",
            "Renewable energy accounts for 26% of global electricity production.",
            "Smart meters can reduce your electricity costs by tracking real-time usage."
        );
        return ResponseEntity.ok(facts);
    }

    @GetMapping("/usage")
    public ResponseEntity<List<Map<String, Object>>> getWeeklyUsage() {
        List<Map<String, Object>> usageData = new ArrayList<>();
        usageData.add(Map.of("day", "Monday", "usage", 20));
        usageData.add(Map.of("day", "Tuesday", "usage", 18));
        usageData.add(Map.of("day", "Wednesday", "usage", 25));
        usageData.add(Map.of("day", "Thursday", "usage", 22));
        usageData.add(Map.of("day", "Friday", "usage", 30));
        return ResponseEntity.ok(usageData);
    }
}


---

Features and Enhancements

1. Dynamic Facts: Facts fetched from the backend using REST APIs.


2. Real-Time Data: Weekly usage displayed in a bar chart with animations.


3. Call to Action: Encourages users to explore tips to save electricity.


4. Premium Styling: Gradients, modern fonts, and animations provide a professional look.



This implementation ensures a premium and informative experience for users while promoting energy-saving habits.




Below is a complete Angular code example for fetching data (electricity facts and weekly usage) from a backend API and displaying it in a professional, interactive front-end application.


---

Project Setup

1. Install Angular CLI if not already installed:

npm install -g @angular/cli


2. Create a new Angular project:

ng new electricity-dashboard


3. Navigate to the project directory:

cd electricity-dashboard


4. Add Angular Material for UI components:

ng add @angular/material




---

Step 1: Create a Service for Data Fetching

Generate a service to handle API requests:

ng generate service services/electricity

electricity.service.ts

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root',
})
export class ElectricityService {
  private baseUrl = 'http://localhost:8080/api/electricity'; // Update with your backend URL

  constructor(private http: HttpClient) {}

  getElectricityFacts(): Observable<string[]> {
    return this.http.get<string[]>(`${this.baseUrl}/facts`);
  }

  getWeeklyUsage(): Observable<any[]> {
    return this.http.get<any[]>(`${this.baseUrl}/usage`);
  }
}


---

Step 2: Create a Component to Display Data

Generate a new component for the home page:

ng generate component components/home

home.component.ts

import { Component, OnInit } from '@angular/core';
import { ElectricityService } from '../../services/electricity.service';

@Component({
  selector: 'app-home',
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.css'],
})
export class HomeComponent implements OnInit {
  facts: string[] = [];
  usageData: any[] = [];
  isLoading: boolean = true;

  constructor(private electricityService: ElectricityService) {}

  ngOnInit(): void {
    this.fetchElectricityFacts();
    this.fetchWeeklyUsage();
  }

  fetchElectricityFacts(): void {
    this.electricityService.getElectricityFacts().subscribe(
      (data) => {
        this.facts = data;
        this.isLoading = false;
      },
      (error) => {
        console.error('Error fetching electricity facts:', error);
      }
    );
  }

  fetchWeeklyUsage(): void {
    this.electricityService.getWeeklyUsage().subscribe(
      (data) => {
        this.usageData = data;
        this.isLoading = false;
      },
      (error) => {
        console.error('Error fetching weekly usage data:', error);
      }
    );
  }
}


---

Step 3: Define HTML Template

home.component.html

<div class="home-container">
  <header class="header">
    <h1 class="title">Electricity Dashboard</h1>
    <p class="subtitle">Monitor your electricity usage and explore insights</p>
  </header>

  <section *ngIf="isLoading" class="loading-section">
    <p>Loading data, please wait...</p>
  </section>

  <!-- Electricity Facts -->
  <section *ngIf="!isLoading" class="facts-section">
    <h2>Electricity Facts</h2>
    <ul class="facts-list">
      <li *ngFor="let fact of facts">{{ fact }}</li>
    </ul>
  </section>

  <!-- Weekly Usage -->
  <section *ngIf="!isLoading" class="usage-section">
    <h2>Weekly Electricity Usage</h2>
    <div class="usage-graph">
      <div
        *ngFor="let data of usageData"
        class="usage-bar"
        [style.height]="data.usage * 5 + 'px'"
      >
        <span class="usage-label">{{ data.day }}</span>
        <span class="usage-value">{{ data.usage }} kWh</span>
      </div>
    </div>
  </section>
</div>


---

Step 4: Add Styling

home.component.css

body {
  margin: 0;
  font-family: 'Roboto', sans-serif;
  background: linear-gradient(to right, #f6d365, #fda085);
  color: #333;
}

.header {
  text-align: center;
  padding: 2rem;
  background: #282c34;
  color: white;
}

.title {
  font-size: 2.5rem;
}

.subtitle {
  font-size: 1.2rem;
  margin-top: 0.5rem;
}

.facts-section, .usage-section {
  margin: 2rem;
}

.facts-list {
  list-style: none;
  padding: 0;
}

.facts-list li {
  background: white;
  margin: 0.5rem 0;
  padding: 1rem;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.usage-graph {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  height: 200px;
}

.usage-bar {
  width: 50px;
  background: #007bff;
  text-align: center;
  color: white;
  position: relative;
}

.usage-label {
  position: absolute;
  bottom: -20px;
  font-size: 0.8rem;
}

.usage-value {
  position: absolute;
  top: -20px;
  font-size: 0.8rem;
}


---

Step 5: Enable HTTP Client

Import the HttpClientModule in your app module:
app.module.ts

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { HttpClientModule } from '@angular/common/http';
import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { HomeComponent } from './components/home/home.component';

@NgModule({
  declarations: [AppComponent, HomeComponent],
  imports: [BrowserModule, AppRoutingModule, HttpClientModule],
  providers: [],
  bootstrap: [AppComponent],
})
export class AppModule {}


---

Backend API Setup

Ensure your backend API (http://localhost:8080/api/electricity) provides endpoints for:

1. /facts: Returns an array of strings.


2. /usage: Returns an array of objects, each with day and usage properties.




---

Run the Project

1. Start the Angular app:

ng serve


2. Navigate to http://localhost:4200 in your browser.




---

This implementation will fetch electricity facts and usage data dynamically, displaying them on a professionally styled home page.


